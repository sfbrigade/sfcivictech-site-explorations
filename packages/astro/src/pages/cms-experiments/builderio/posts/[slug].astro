---
export async function getStaticPaths() {
	const builderModel = import.meta.env.BUILDER_BLOGPOST_MODEL;
	const builderAPIpublicKey = import.meta.env.BUILDER_API_PUBLIC_KEY;
	const { results: posts } = await fetch(
		`https://cdn.builder.io/api/v3/content/${builderModel}?${new URLSearchParams(
			{
				apiKey: builderAPIpublicKey,
				fields: ["data.slug", "data.title"].join(","),
				cachebust: "true",
			}
		).toString()}`
	)
		.then((res) => res.json())
		.catch
		// ...catch some errors...);
		();
	//return {};
	return [
		...posts.map(({ data: { slug, title } }) => ({
			params: { slug },
			props: { title },
		})),
	];
}
const { slug } = Astro.params;
const { title } = Astro.props;
const builderModel = import.meta.env.BUILDER_BLOGPOST_MODEL;
const builderAPIpublicKey = import.meta.env.BUILDER_API_PUBLIC_KEY;
// Builder's API requires this field but for this use case the url doesn't seem to matter - the API returns the same HTML
const encodedUrl = encodeURIComponent("moot");
const { html: postHTML } = await fetch(
	`https://cdn.builder.io/api/v1/qwik/${builderModel}?${new URLSearchParams({
		apiKey: builderAPIpublicKey,
		url: encodedUrl,
		"query.data.slug": slug,
		cachebust: "true",
	}).toString()}`
)
	.then((res) => res.json())
	.catch();
---

<html lang="en">
	<head>
		<title>{title}</title>
	</head>
	<body>
		<header>This is your header</header>
		<article>
			<Fragment set:html={postHTML} />
		</article>
		<footer>The is your footer</footer>
	</body>
</html>
